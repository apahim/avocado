==========================================
CIT Varianter Plugin - Collaboration Guide
==========================================

Guide created using Fedora 26::

    $ cat /etc/system-release
    Fedora release 26 (Twenty Six)

Install the system dependencies::

    $ dnf install -y python2 git gcc python-devel python-pip libvirt-devel libffi-devel openssl-devel libyaml-devel redhat-rpm-config xz-devel

- Go to https://github.com/apahim/avocado, click in ``Fork``.
- Now you have your fork of my repository, clone it to your workstation::

    $ mkdir git
    $ cd git
    $ git clone git@github.com:<your_username>/avocado.git

- Enter the directory and install the requirements::

    $ cd avocado
    $ sudo make requirements

- Change to the branch which contains the CIT Plugin::

    $ git checkout cit_plugin

- Install Avocado the development way::

    $ make develop

Note: if you have executed ``make develop`` before changing to the
``cit_plugin`` branch, you have to execute it again in the branch.

Now Avocado is expected to be working in your system. Try with::

    $ avocado run examples/tests/passtest.py
    JOB ID     : 276d75f7df7a960d699111d231ee6e6d2f26d2cd
    JOB LOG    : $HOME/avocado/job-results/job-2017-11-22T14.24-276d75f/job.log
     (1/1) examples/tests/passtest.py:PassTest.test: PASS (0.02 s)
    RESULTS    : PASS 1 | ERROR 0 | FAIL 0 | SKIP 0 | WARN 0 | INTERRUPT 0 | CANCEL 0
    JOB TIME   : 0.92 s
    JOB HTML   : $HOME/avocado/job-results/job-2017-11-22T14.24-276d75f/results.html

In this branch, you will find some extra files:

- ``optional_plugins/varianter_cit/avocado_varianter_cit/__init__.py``: The
  plugin implementation. Your code goes here.

- ``examples/varianter_cit/params.ini``: The parameters file used in this demo
  implementation.

- ``examples/tests/test_cit.py``: The test file used in this demo
  implementation.

To see the variants generated by this demo implementation, execute::

    $ avocado variants --cit-parameter-file=examples/varianter_cit/params.ini
    CIT Variants (12):
    Variant a-x-foo-6e95:    /run
    Variant a-x-bar-5bef:    /run
    Variant a-y-foo-efe6:    /run
    Variant a-y-bar-c1c0:    /run
    Variant b-x-foo-69ea:    /run
    Variant b-x-bar-c514:    /run
    Variant b-y-foo-8d31:    /run
    Variant b-y-bar-98b3:    /run
    Variant c-x-foo-3735:    /run
    Variant c-x-bar-afc1:    /run
    Variant c-y-foo-6366:    /run
    Variant c-y-bar-556b:    /run

You can enable more verbosity, making each variant to show its content::

    $ avocado variants --cit-parameter-file=examples/varianter_cit/params.ini -c
    CIT Variants (12):
    Variant a-x-foo-6e95:    /run
        /run:p2 => x
        /run:p3 => foo
        /run:p1 => a
    Variant a-x-bar-5bef:    /run
        /run:p2 => x
        /run:p3 => bar
        /run:p1 => a
    Variant a-y-foo-efe6:    /run
        /run:p2 => y
        /run:p3 => foo
        /run:p1 => a
    Variant a-y-bar-c1c0:    /run
        /run:p2 => y
        /run:p3 => bar
        /run:p1 => a
    Variant b-x-foo-69ea:    /run
        /run:p2 => x
        /run:p3 => foo
        /run:p1 => b
    Variant b-x-bar-c514:    /run
        /run:p2 => x
        /run:p3 => bar
        /run:p1 => b
    Variant b-y-foo-8d31:    /run
        /run:p2 => y
        /run:p3 => foo
        /run:p1 => b
    Variant b-y-bar-98b3:    /run
        /run:p2 => y
        /run:p3 => bar
        /run:p1 => b
    Variant c-x-foo-3735:    /run
        /run:p2 => x
        /run:p3 => foo
        /run:p1 => c
    Variant c-x-bar-afc1:    /run
        /run:p2 => x
        /run:p3 => bar
        /run:p1 => c
    Variant c-y-foo-6366:    /run
        /run:p2 => y
        /run:p3 => foo
        /run:p1 => c
    Variant c-y-bar-556b:    /run
        /run:p2 => y
        /run:p3 => bar
        /run:p1 => c

To execute the test with current demo implementation of the plugins, use::

    $ avocado run examples/tests/test_cit.py --cit-parameter-file=examples/varianter_cit/params.ini
    JOB ID     : 7bb67ddc5f6bae09be53fd4e85e43f05117a20bd
    JOB LOG    : $HOME/avocado/job-results/job-2017-11-22T14.25-7bb67dd/job.log
     (01/12) examples/tests/test_cit.py:TestCit.test;a-x-foo-6e95: PASS (0.04 s)
     (02/12) examples/tests/test_cit.py:TestCit.test;a-x-bar-5bef: PASS (0.02 s)
     (03/12) examples/tests/test_cit.py:TestCit.test;a-y-foo-efe6: PASS (0.04 s)
     (04/12) examples/tests/test_cit.py:TestCit.test;a-y-bar-c1c0: PASS (0.02 s)
     (05/12) examples/tests/test_cit.py:TestCit.test;b-x-foo-69ea: PASS (0.04 s)
     (06/12) examples/tests/test_cit.py:TestCit.test;b-x-bar-c514: PASS (0.03 s)
     (07/12) examples/tests/test_cit.py:TestCit.test;b-y-foo-8d31: PASS (0.02 s)
     (08/12) examples/tests/test_cit.py:TestCit.test;b-y-bar-98b3: PASS (0.01 s)
     (09/12) examples/tests/test_cit.py:TestCit.test;c-x-foo-3735: PASS (0.04 s)
     (10/12) examples/tests/test_cit.py:TestCit.test;c-x-bar-afc1: PASS (0.03 s)
     (11/12) examples/tests/test_cit.py:TestCit.test;c-y-foo-6366: PASS (0.03 s)
     (12/12) examples/tests/test_cit.py:TestCit.test;c-y-bar-556b: PASS (0.02 s)
    RESULTS    : PASS 12 | ERROR 0 | FAIL 0 | SKIP 0 | WARN 0 | INTERRUPT 0 | CANCEL 0
    JOB TIME   : 1.89 s
    JOB HTML   : $HOME/avocado/job-results/job-2017-11-22T14.25-7bb67dd/results.html
